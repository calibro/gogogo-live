"use strict";function py2_round(a){return Math.floor(Math.abs(a)+.5)*Math.sign(a)}function encode(a,b,c){a=py2_round(a*c),b=py2_round(b*c);var d=a-b;d<<=1,0>a-b&&(d=~d);for(var e="";d>=32;)e+=String.fromCharCode((32|31&d)+63),d>>=5;return e+=String.fromCharCode(d+63)}function flipped(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].slice().reverse());return b}var polyline={};polyline.decode=function(a,b){for(var c,d,e=0,f=0,g=0,h=[],i=0,j=0,k=null,l=Math.pow(10,b||5);e<a.length;){k=null,i=0,j=0;do k=a.charCodeAt(e++)-63,j|=(31&k)<<i,i+=5;while(k>=32);c=1&j?~(j>>1):j>>1,i=j=0;do k=a.charCodeAt(e++)-63,j|=(31&k)<<i,i+=5;while(k>=32);d=1&j?~(j>>1):j>>1,f+=c,g+=d,h.push([f/l,g/l])}return h},polyline.encode=function(a,b){if(!a.length)return"";for(var c=Math.pow(10,b||5),d=encode(a[0][0],0,c)+encode(a[0][1],0,c),e=1;e<a.length;e++){var f=a[e],g=a[e-1];d+=encode(f[0],g[0],c),d+=encode(f[1],g[1],c)}return d},polyline.fromGeoJSON=function(a,b){if(a&&"Feature"===a.type&&(a=a.geometry),!a||"LineString"!==a.type)throw new Error("Input must be a GeoJSON LineString");return polyline.encode(flipped(a.coordinates),b)},polyline.toGeoJSON=function(a,b){var c=polyline.decode(a,b);return{type:"LineString",coordinates:flipped(c)}},"object"==typeof module&&module.exports&&(module.exports=polyline);